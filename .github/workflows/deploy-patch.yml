name: Deploy Security Patch
run-name: deploy-patch-${{ inputs.dest_repo }}-${{ inputs.ref }}

on:
  workflow_dispatch:
    inputs:
      ref:
        required: true
        type: string
        description: "The branch name that the patch will be applied to. Ex: main"
      dest_repo:
        required: true
        type: string
        description: "The repository name that the patch will be applied to. Ex: grafana/grafana"
      patch_repo:
        required: true
        type: string
        description: "The repository name where the patch is saved. Ex: grafana/grafana-security-patches"
      patch_name:
        required: true
        type: string
        description: "The name of the patch to deploy. Ex: security-patch-202330713.patch"
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        description: "The branch name that the patch will be applied to. Ex: main"
      dest_repo:
        required: true
        type: string
        description: "The repository name that the patch will be applied to. Ex: grafana/grafana"
      patch_repo:
        required: true
        type: string
        description: "The repository name where the patch is saved. Ex: grafana/grafana-security-patches"
      patch_name:
        required: true
        type: string
        description: "The name of the patch to deploy. Ex: security-patch-202330713.patch"

concurrency: "${{ inputs.ref }}-${{ inputs.dest_repo }}"
env:
  DEST_REPO: ${{ inputs.dest_repo }}
  PATCH_REPO: ${{ inputs.patch_repo }}
  PATCH_NAME: ${{ inputs.patch_name }}
  REF: ${{ inputs.ref }}
  GIT_USER: "github-actions[bot]"
  GIT_USER_EMAIL: "github-actions[bot]@users.noreply.github.com"

jobs:
  deploy-patch:
    runs-on: ubuntu-latest
    steps:
      - name: "Generate token"
        id: generate_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92
        with:
          app_id: ${{ secrets.GRAFANA_DELIVERY_BOT_APP_ID }}
          private_key: ${{ secrets.GRAFANA_DELIVERY_BOT_APP_PEM }}

      - name: "Checkout patch repo"
        uses: actions/checkout@v4
        with: 
          repository: ${{ inputs.patch_repo }}
          path: patches 
          token: ${{ steps.generate_token.outputs.token }}

      - name: "Checkout dest repo"
        uses: actions/checkout@v4
        with: 
          repository: ${{ inputs.dest_repo }}
          ref: ${{ inputs.ref }}
          path: dest
          token: ${{ steps.generate_token.outputs.token }}
      
      - name: "Deploy patch to dest repo"
        id: patch
        working-directory: dest
        run: |
          # Tell git who we are
          git config --local user.name ${GIT_USER}
          git config --local user.email ${GIT_USER_EMAIL}

          # Apply patch
          if [ -f "../patches/${REF}/${PATCH_NAME}" ];
          then
            git am --committer-date-is-author-date -q ../patches/${REF}/${PATCH_NAME} > /dev/null 2>&1
          fi
          echo Patches applied.

      - name: Delete patch
        working-directory: patches
        run: |
          # Tell git who we are
          git config --local user.name ${GIT_USER}
          git config --local user.email ${GIT_USER_EMAIL}

          # Delete patch
          rm ${REF}/${PATCH_NAME}
          git add ${REF}
          git commit -m "Deleting patch ${REF}/${PATCH_NAME}"
          git push origin main

      - name: Handle patch failure
        if: ${{ failure() && steps.patches.conclusion == 'failure' }}
        run: echo "::error title='Failed to apply patches when mirroring'::The sync process was not able to apply active patches to the mirror. See the documentation here for how to resolve this error."

      - name: Create pull request with patch commit
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ steps.generate_token.outputs.token }}
          path: dest
          branch: ${{ inputs.patch_name }}
          title: Apply security patch ${{ inputs.patch_name }}
          body: Apply security patch ${{ inputs.patch_name }}

